{"version":3,"file":"index.js","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n"],"names":["RE","parse","match","token","mapping","parseInt","flags","width","precision","specifier","str","content","tokens","prev","exec","slice","lastIndex","length","push"],"mappings":";yCAsBA,IAAIA,EAAK,6EAYT,SAASC,EAAOC,GACf,IAAIC,EAAQ,CACXC,QAAaF,EAAO,GAAQG,SAAUH,EAAO,GAAK,SAAO,EACzDI,MAASJ,EAAO,GAChBK,MAASL,EAAO,GAChBM,UAAaN,EAAO,GACpBO,UAAaP,EAAO,IAKrB,MAHoB,MAAfA,EAAO,SAA8B,IAAfA,EAAO,KACjCC,EAAMK,UAAY,KAEZL,SAgBR,SAAyBO,GACxB,IAAIC,EACAC,EACAV,EACAW,EAKJ,IAHAD,EAAS,GACTC,EAAO,EACPX,EAAQF,EAAGc,KAAMJ,GACTR,IACPS,EAAUD,EAAIK,MAAOF,EAAMb,EAAGgB,UAAYd,EAAO,GAAIe,SACxCA,QACZL,EAAOM,KAAMP,GAEdC,EAAOM,KAAMjB,EAAOC,IACpBW,EAAOb,EAAGgB,UACVd,EAAQF,EAAGc,KAAMJ,GAMlB,OAJAC,EAAUD,EAAIK,MAAOF,IACRI,QACZL,EAAOM,KAAMP,GAEPC"}